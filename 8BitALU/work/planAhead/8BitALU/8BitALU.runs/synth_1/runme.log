
*** Running xst
    with args -ifn "mojo_top_0.xst" -ofn "mojo_top_0.srp" -intstyle ise

Reading design: mojo_top_0.prj

=========================================================================
*                          HDL Parsing                                  *
=========================================================================
Analyzing Verilog file "C:/Users/user/Documents/GitHub/8bitALU/8BitALU/work/planAhead/8BitALU/8BitALU.srcs/sources_1/imports/verilog/testSM_2.v" into library work
Parsing module <testSM_2>.
Analyzing Verilog file "C:/Users/user/Documents/GitHub/8bitALU/8BitALU/work/planAhead/8BitALU/8BitALU.srcs/sources_1/imports/verilog/shifter_6.v" into library work
Parsing module <shifter_6>.
Analyzing Verilog file "C:/Users/user/Documents/GitHub/8bitALU/8BitALU/work/planAhead/8BitALU/8BitALU.srcs/sources_1/imports/verilog/reset_conditioner_1.v" into library work
Parsing module <reset_conditioner_1>.
Analyzing Verilog file "C:/Users/user/Documents/GitHub/8bitALU/8BitALU/work/planAhead/8BitALU/8BitALU.srcs/sources_1/imports/verilog/comparator_5.v" into library work
Parsing module <comparator_5>.
Analyzing Verilog file "C:/Users/user/Documents/GitHub/8bitALU/8BitALU/work/planAhead/8BitALU/8BitALU.srcs/sources_1/imports/verilog/bool_4.v" into library work
Parsing module <bool_4>.
Analyzing Verilog file "C:/Users/user/Documents/GitHub/8bitALU/8BitALU/work/planAhead/8BitALU/8BitALU.srcs/sources_1/imports/verilog/addSubtract_3.v" into library work
Parsing module <addSubtract_3>.
Analyzing Verilog file "C:/Users/user/Documents/GitHub/8bitALU/8BitALU/work/planAhead/8BitALU/8BitALU.srcs/sources_1/imports/verilog/mojo_top_0.v" into library work
Parsing module <mojo_top_0>.

=========================================================================
*                            HDL Elaboration                            *
=========================================================================

Elaborating module <mojo_top_0>.

Elaborating module <reset_conditioner_1>.

Elaborating module <testSM_2>.

Elaborating module <addSubtract_3>.

Elaborating module <bool_4>.

Elaborating module <comparator_5>.

Elaborating module <shifter_6>.
WARNING:HDLCompiler:413 - "C:/Users/user/Documents/GitHub/8bitALU/8BitALU/work/planAhead/8BitALU/8BitALU.srcs/sources_1/imports/verilog/mojo_top_0.v" Line 159: Result of 64-bit expression is truncated to fit in 8-bit target.
WARNING:HDLCompiler:413 - "C:/Users/user/Documents/GitHub/8bitALU/8BitALU/work/planAhead/8BitALU/8BitALU.srcs/sources_1/imports/verilog/mojo_top_0.v" Line 160: Result of 64-bit expression is truncated to fit in 8-bit target.

=========================================================================
*                           HDL Synthesis                               *
=========================================================================

Synthesizing Unit <mojo_top_0>.
    Related source file is "C:/Users/user/Documents/GitHub/8bitALU/8BitALU/work/planAhead/8BitALU/8BitALU.srcs/sources_1/imports/verilog/mojo_top_0.v".
WARNING:Xst:647 - Input <io_button<4:2>> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <io_dip> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <cclk> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <spi_ss> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <spi_mosi> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <spi_sck> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <avr_tx> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <avr_rx_busy> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
    Found 24-bit register for signal <M_errorCounter_q>.
    Found 24-bit adder for signal <M_errorCounter_q[23]_GND_1_o_add_1_OUT> created at line 163.
    Found 8x1-bit multiplier for signal <n0058> created at line 164.
    Found 6x1-bit multiplier for signal <PWR_1_o_M_errorCounter_q[23]_MuLt_3_OUT> created at line 165.
    Found 5x1-bit multiplier for signal <PWR_1_o_M_errorCounter_q[23]_MuLt_4_OUT> created at line 167.
    Found 8-bit 4-to-1 multiplexer for signal <result> created at line 133.
    Found 1-bit tristate buffer for signal <spi_miso> created at line 112
    Found 1-bit tristate buffer for signal <spi_channel<3>> created at line 112
    Found 1-bit tristate buffer for signal <spi_channel<2>> created at line 112
    Found 1-bit tristate buffer for signal <spi_channel<1>> created at line 112
    Found 1-bit tristate buffer for signal <spi_channel<0>> created at line 112
    Found 1-bit tristate buffer for signal <avr_rx> created at line 112
    Summary:
	inferred   3 Multiplier(s).
	inferred   1 Adder/Subtractor(s).
	inferred  24 D-type flip-flop(s).
	inferred   3 Multiplexer(s).
	inferred   6 Tristate(s).
Unit <mojo_top_0> synthesized.

Synthesizing Unit <reset_conditioner_1>.
    Related source file is "C:/Users/user/Documents/GitHub/8bitALU/8BitALU/work/planAhead/8BitALU/8BitALU.srcs/sources_1/imports/verilog/reset_conditioner_1.v".
    Found 4-bit register for signal <M_stage_q>.
    Summary:
	inferred   4 D-type flip-flop(s).
Unit <reset_conditioner_1> synthesized.

Synthesizing Unit <testSM_2>.
    Related source file is "C:/Users/user/Documents/GitHub/8bitALU/8BitALU/work/planAhead/8BitALU/8BitALU.srcs/sources_1/imports/verilog/testSM_2.v".
    Found 5-bit register for signal <M_state_q>.
    Found 27-bit register for signal <M_counter_q>.
    Found finite state machine <FSM_0> for signal <M_state_q>.
    -----------------------------------------------------------------------
    | States             | 19                                             |
    | Transitions        | 55                                             |
    | Inputs             | 12                                             |
    | Outputs            | 28                                             |
    | Clock              | clk (rising_edge)                              |
    | Reset              | rst (positive)                                 |
    | Reset type         | synchronous                                    |
    | Reset State        | 00000                                          |
    | Power Up State     | 00000                                          |
    | Encoding           | auto                                           |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found 27-bit adder for signal <M_counter_q[26]_GND_3_o_add_0_OUT> created at line 52.
    Summary:
	inferred   1 Adder/Subtractor(s).
	inferred  27 D-type flip-flop(s).
	inferred  43 Multiplexer(s).
	inferred   1 Finite State Machine(s).
Unit <testSM_2> synthesized.

Synthesizing Unit <addSubtract_3>.
    Related source file is "C:/Users/user/Documents/GitHub/8bitALU/8BitALU/work/planAhead/8BitALU/8BitALU.srcs/sources_1/imports/verilog/addSubtract_3.v".
    Found 8-bit adder for signal <n0031> created at line 30.
    Found 8-bit adder for signal <s> created at line 30.
    Summary:
	inferred   2 Adder/Subtractor(s).
	inferred   1 Multiplexer(s).
Unit <addSubtract_3> synthesized.

Synthesizing Unit <bool_4>.
    Related source file is "C:/Users/user/Documents/GitHub/8bitALU/8BitALU/work/planAhead/8BitALU/8BitALU.srcs/sources_1/imports/verilog/bool_4.v".
    Summary:
Unit <bool_4> synthesized.

Synthesizing Unit <comparator_5>.
    Related source file is "C:/Users/user/Documents/GitHub/8bitALU/8BitALU/work/planAhead/8BitALU/8BitALU.srcs/sources_1/imports/verilog/comparator_5.v".
    Found 1-bit 4-to-1 multiplexer for signal <out> created at line 12.
    Summary:
	inferred   1 Multiplexer(s).
Unit <comparator_5> synthesized.

Synthesizing Unit <shifter_6>.
    Related source file is "C:/Users/user/Documents/GitHub/8bitALU/8BitALU/work/planAhead/8BitALU/8BitALU.srcs/sources_1/imports/verilog/shifter_6.v".
    Found 8-bit shifter logical left for signal <a[7]_b[2]_shift_left_0_OUT> created at line 20
    Found 8-bit shifter logical right for signal <a[7]_b[2]_shift_right_1_OUT> created at line 23
    Found 8-bit shifter arithmetic right for signal <a[7]_b[2]_shift_right_2_OUT> created at line 26
    Found 8-bit 4-to-1 multiplexer for signal <out> created at line 18.
    Summary:
	inferred   1 Multiplexer(s).
	inferred   3 Combinational logic shifter(s).
Unit <shifter_6> synthesized.

=========================================================================
HDL Synthesis Report

Macro Statistics
# Multipliers                                          : 3
 5x1-bit multiplier                                    : 1
 6x1-bit multiplier                                    : 1
 8x1-bit multiplier                                    : 1
# Adders/Subtractors                                   : 4
 24-bit adder                                          : 1
 27-bit adder                                          : 1
 8-bit adder                                           : 2
# Registers                                            : 3
 24-bit register                                       : 1
 27-bit register                                       : 1
 4-bit register                                        : 1
# Multiplexers                                         : 49
 1-bit 4-to-1 multiplexer                              : 1
 24-bit 2-to-1 multiplexer                             : 1
 27-bit 2-to-1 multiplexer                             : 43
 8-bit 2-to-1 multiplexer                              : 2
 8-bit 4-to-1 multiplexer                              : 2
# Logic shifters                                       : 3
 8-bit shifter arithmetic right                        : 1
 8-bit shifter logical left                            : 1
 8-bit shifter logical right                           : 1
# Tristates                                            : 6
 1-bit tristate buffer                                 : 6
# FSMs                                                 : 1
# Xors                                                 : 11
 1-bit xor2                                            : 10
 8-bit xor2                                            : 1

=========================================================================

=========================================================================
*                       Advanced HDL Synthesis                          *
=========================================================================


Synthesizing (advanced) Unit <mojo_top_0>.
The following registers are absorbed into counter <M_errorCounter_q>: 1 register on signal <M_errorCounter_q>.
Unit <mojo_top_0> synthesized (advanced).

=========================================================================
Advanced HDL Synthesis Report

Macro Statistics
# Multipliers                                          : 3
 5x1-bit multiplier                                    : 1
 6x1-bit multiplier                                    : 1
 8x1-bit multiplier                                    : 1
# Adders/Subtractors                                   : 2
 27-bit adder                                          : 1
 8-bit adder carry in                                  : 1
# Counters                                             : 1
 24-bit up counter                                     : 1
# Registers                                            : 31
 Flip-Flops                                            : 31
# Multiplexers                                         : 75
 1-bit 2-to-1 multiplexer                              : 27
 1-bit 4-to-1 multiplexer                              : 1
 24-bit 2-to-1 multiplexer                             : 1
 27-bit 2-to-1 multiplexer                             : 42
 8-bit 2-to-1 multiplexer                              : 2
 8-bit 4-to-1 multiplexer                              : 2
# Logic shifters                                       : 3
 8-bit shifter arithmetic right                        : 1
 8-bit shifter logical left                            : 1
 8-bit shifter logical right                           : 1
# FSMs                                                 : 1
# Xors                                                 : 11
 1-bit xor2                                            : 10
 8-bit xor2                                            : 1

=========================================================================

=========================================================================
*                         Low Level Synthesis                           *
=========================================================================
Analyzing FSM <MFsm> for best encoding.
Optimizing FSM <testSM/FSM_0> on signal <M_state_q[1:19]> with one-hot encoding.
------------------------------
 State | Encoding
------------------------------
 00000 | 0000000000000000001
 10010 | 0000000000000000010
 00001 | 0000000000000000100
 00010 | 0000000000000001000
 00011 | 0000000000000010000
 00100 | 0000000000000100000
 00101 | 0000000000001000000
 00110 | 0000000000010000000
 00111 | 0000000000100000000
 01000 | 0000000001000000000
 01001 | 0000000010000000000
 01010 | 0000000100000000000
 01011 | 0000001000000000000
 01100 | 0000010000000000000
 01101 | 0000100000000000000
 01110 | 0001000000000000000
 01111 | 0010000000000000000
 10000 | 0100000000000000000
 10001 | 1000000000000000000
------------------------------

Optimizing unit <mojo_top_0> ...

Optimizing unit <testSM_2> ...

Optimizing unit <addSubtract_3> ...

Mapping all equations...
Building and optimizing final netlist ...
Found area constraint ratio of 100 (+ 0) on block mojo_top_0, actual ratio is 5.
FlipFlop testSM/M_state_q_FSM_FFd15 has been replicated 2 time(s)
FlipFlop testSM/M_state_q_FSM_FFd17 has been replicated 2 time(s)
FlipFlop testSM/M_state_q_FSM_FFd18 has been replicated 2 time(s)

Final Macro Processing ...

Processing Unit <mojo_top_0> :
INFO:Xst:741 - HDL ADVISOR - A 4-bit shift register was found for signal <reset_cond/M_stage_q_3> and currently occupies 4 logic cells (2 slices). Removing the set/reset logic would take advantage of SRL32 (and derived) primitives and reduce this to 1 logic cells (1 slices). Evaluate if the set/reset can be removed for this simple shift register. The majority of simple pipeline structures do not need to be set/reset operationally.
Unit <mojo_top_0> processed.

=========================================================================
Final Register Report

Macro Statistics
# Registers                                            : 80
 Flip-Flops                                            : 80

=========================================================================

=========================================================================
*                           Partition Report                            *
=========================================================================

Partition Implementation Status
-------------------------------

  No Partitions were found in this design.

-------------------------------

=========================================================================
*                            Design Summary                             *
=========================================================================

Clock Information:
------------------
-----------------------------------+------------------------+-------+
Clock Signal                       | Clock buffer(FF name)  | Load  |
-----------------------------------+------------------------+-------+
clk                                | BUFGP                  | 80    |
-----------------------------------+------------------------+-------+

Asynchronous Control Signals Information:
----------------------------------------
No asynchronous control signals found in this design

Timing Summary:
---------------
Speed Grade: -2

   Minimum period: 13.517ns (Maximum Frequency: 73.981MHz)
   Minimum input arrival time before clock: 10.547ns
   Maximum output required time after clock: 12.992ns
   Maximum combinational path delay: 9.405ns

=========================================================================
