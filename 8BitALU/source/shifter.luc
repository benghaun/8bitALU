module shifter (
    input alufn[2], //2-bit alufn input signal specifically ALUFN0 and ALUFN1  
    input a[8],     //8-bit input A
    input b[3],     //4-bit input B 
    output out[8]   //8-bit output out\
  ) {

  var shiftCount;   //To keep track of the no.of shifts to be performed 
  var i;            //Loop variable
  var inter[8];     //input 'a' can only be read and output 'out' can only be written, so we use an intermediate variable in our process   
  
  always {
    inter = a;
    shiftCount = 0; 
    for (i = 2; i<=1 ; i--){            //Using a for loop get the shiftCount
        shiftCount = 2*(shiftCount) + 2*(b[i]);
    }
    shiftCount = shiftCount + b[0];
    
    case (alufn){                        //Do note the order of the input bits and we are using switch statments to organize the code
      2b00: out = inter >> shiftCount;   //ALUFN[1:0] = 00 corresponds to left shift
      2b10: out = inter << shiftCount;   //ALUFN[1:0] = 01 corresponds to right shift
      2b11: out = $signed(inter) <<< shiftCount;  //ALUFN[1:0] = 11 corresponds to signed right shift
      default: out = inter;              //default output     
    }
  }
}
